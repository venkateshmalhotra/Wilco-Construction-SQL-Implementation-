DDL SQL Statement

Create Statements

Below are create scripts for all Database tables

1. EEOC table script

CREATE TABLE EEO_CODE
(
EEO_CODE_ID INT IDENTITY (1, 1) PRIMARY KEY,
EEO_CODE VARCHAR (50)
);

2. TAX table script

CREATE TABLE TAX
(
TAX_ID INT IDENTITY (1, 1) PRIMARY KEY,
FEDERAL_TAX NUMERIC (5, 3),
STATE_TAX NUMERIC (5, 3),
SOCIALSECURITY_TAX NUMERIC (5, 3),
OTHER_TAX NUMERIC (5, 3),
)

3. EMPLOYEE table script

CREATE TABLE EMPLOYEE
(
EMP_ID INT IDENTITY (1,1) PRIMARY KEY,
SOCIAL_SECURITY_NUMBER VARCHAR (11) UNIQUE,
EMP_LAST_NAME VARCHAR (25),
EMP_FIRST_NAME VARCHAR (25),
EMP_MI VARCHAR (2),
STREET VARCHAR (50),
CITY VARCHAR (25),
STATE VARCHAR (25),
ZIPCODE INT,
PHONE_NUMBER VARCHAR (12) UNIQUE,
DATE_OF_BIRTH DATE,
GENDER CHAR (1),
MARITAL_STATUS CHAR (1),
EEO_CODE_ID INT,
CONSTRAINT CHK_GENDER CHECK (GENDER IN ('F','M')),
CONSTRAINT CHK_MARITAL_STATUS CHECK (MARITAL_STATUS IN ('M','S')),
CONSTRAINT CHK_SOCIAL_SECURITY_NUMBER CHECK (LEN (SOCIAL_SECURITY_NUMBER) = 11),
CONSTRAINT CHK_PHONE_NUMBER CHECK (LEN (PHONE_NUMBER) = 12),
CONSTRAINT EEO_CODE_FK FOREIGN KEY (EEO_CODE_ID) REFERENCES EEO_CODE (EEO_CODE_ID)
);

4. PROJECT table script

CREATE TABLE PROJECT
(
PROJECT_ID INT IDENTITY (1, 1) PRIMARY KEY,
PROJECT_NUMBER VARCHAR (14),
PROJECT_DESCRIPTION VARCHAR (100),
PROJECT_LOCATION VARCHAR (100),
SITE_INSPECTOR_NAME VARCHAR (50),
EMP_SUPERVISOR_ID INT,
PROJECT_TYPE VARCHAR (7),
DISTANCE_FFROM_UNION_HALL NUMERIC (4, 2),
CONSTRAINT EMP_SUPERVISOR_ID_FK FOREIGN KEY (EMP_SUPERVISOR_ID) REFERENCES EMPLOYEE
(EMP_ID)
);

5. JOB_CLASSIFICATION table script

CREATE TABLE JOB_CLASSIFICATION
(
JOB_ID INT IDENTITY (1, 1) PRIMARY KEY,
JOB_CODE VARCHAR (3),
JOB_DESCRIPTION VARCHAR (20),
BASIC_HOURLY_RATE NUMERIC (4, 2),
FRINGE_BENEFITS NUMERIC (4, 2),
OVERTIME_RATE NUMERIC (4, 2),
PROJECT_ID INT,
CONSTRAINT JOB_CLASSIFICATION_PROJECTID_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT
(PROJECT_ID)
);

6. EMPLOYEE_TIME_CARD table script

CREATE TABLE EMPLOYEE_TIME_CARD
(
EMP_ID INT,
JOB_ID INT,
REGULAR_HOURS NUMERIC (4, 2),
OVERTIME_HOURS NUMERIC (4, 2),
DATE DATE,
CONSTRAINT EMPLOYEE_TIME_CARD_PK PRIMARY KEY
(
EMP_ID,
JOB_ID,
DATE
),
CONSTRAINT EMP_ID_FK FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE (EMP_ID),
CONSTRAINT JOB_ID_FK FOREIGN KEY (JOB_ID) REFERENCES JOB_CLASSIFICATION (JOB_ID)
);