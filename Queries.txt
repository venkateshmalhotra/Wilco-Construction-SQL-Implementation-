Queries to generate output as per exhibits

Exhibit B
Exhibit B is Wilcoâ€™s EEOC Compliance Statement form. This form has detailed work hour break down part
D which has details about number of hour minority, female and non-minority employees have worked
against each job classification. Total number of hours each job is performed and percentage of minority
and females against total job hours of each job.

This detailed work break down is achieved using following code:
--QUERY FOR DETAIL HOURS
WITH CTE_DETAIL_HOURS ([NON/MINORITY], JOB_CLASSIFICATION, GENDER, HOURS,JOB_ID)
AS
(
SELECT
CASE WHEN E.EEO_CODE = 5 THEN 'NON-MINORITY' ELSE 'MINORITY' END AS [NON/MINORITY],
CONCAT (RTRIM(JOB_CODE),'- ',RTRIM(JOB_DESCRIPTION)) AS JOB_CLASSIFICATION,
GENDER, SUM (REGULAR_HOURS+ OVERTIME_HOURS) HOURS, JC.JOB_ID
FROM EMPLOYEE_TIME_CARD ETC
JOIN JOB_CLASSIFICATION JC ON ETC.JOB_ID = JC.JOB_ID
JOIN EMPLOYEE E ON ETC.EMP_ID = E.EMP_ID
JOIN PROJECT P ON JC.PROJECT_ID = P.PROJECT_ID
WHERE PROJECT_NUMBER = 'OH-PIK-335-005'
GROUP BY
CASE WHEN E.EEO_CODE = 5 THEN 'NON-MINORITY' ELSE 'MINORITY' END,
JOB_CODE,
JOB_DESCRIPTION,
GENDER,
JC.JOB_ID),
-- QUERY FOR TOTAL HOURS
CTE_TOTALHOURS (JOB_ID, TOTAL_HOURS)
AS
(
SELECT JC.JOB_ID, SUM(REGULAR_HOURS+ OVERTIME_HOURS) TOTAL_HOURS
FROM EMPLOYEE_TIME_CARD ETC
JOIN JOB_CLASSIFICATION JC ON ETC.JOB_ID = JC.JOB_ID
JOIN PROJECT P ON JC.PROJECT_ID = P.PROJECT_ID
WHERE PROJECT_NUMBER = 'OH-PIK-335-005'
GROUP BY
JC.JOB_ID)
-- QUERY TO CALCULATE TOTAL HOURS WORKED BY MINORITY
,CTE_MINORITY_HOURS (JOB_ID,MINORITY_HOURS)
AS
(
SELECT JC.JOB_ID, SUM (REGULAR_HOURS+ OVERTIME_HOURS) TOTAL_HOURS
FROM EMPLOYEE_TIME_CARD ETC
JOIN JOB_CLASSIFICATION JC ON ETC.JOB_ID = JC.JOB_ID
JOIN PROJECT P ON JC.PROJECT_ID = P.PROJECT_ID
JOIN EMPLOYEE E ON ETC.EMP_ID = E.EMP_ID
WHERE PROJECT_NUMBER = 'OH-PIK-335-005'
AND EEO_CODE != 5
GROUP BY
JC.JOB_ID
)
--- MAIN QUERY
SELECT
JOB_CLASSIFICATION,
[NON/MINORITY],
CASE WHEN GENDER = 'M' THEN 'MALE'
WHEN GENDER = 'F' THEN 'FEMALE' END AS GENDER,
HOURS,
TOTAL_HOURS,
CASE WHEN [NON/MINORITY] = 'MINORITY' THEN (SUM(MINORITY_HOURS)/TOTAL_HOURS)*100
END AS MINORITYPERCENT,
CASE WHEN GENDER = 'F' THEN (SUM(HOURS)/TOTAL_HOURS)*100 END AS FEMALEPERSENT
FROM CTE_DETAIL_HOURS CDH
JOIN CTE_TOTALHOURS CTH ON CDH.JOB_ID = CTH.JOB_ID
JOIN CTE_MINORITY_HOURS CMH ON CDH.JOB_ID = CMH.JOB_ID
GROUP BY
[NON/MINORITY],
JOB_CLASSIFICATION,
GENDER,
HOURS,
TOTAL_HOURS
ORDER BY JOB_CLASSIFICATION


Exhibit D
Exhibit D shows the number of regular, overtime and total hours worked by each employee in a
particular project. It also shows the skill details, rate per skill and gross payment done to each employee.
Part D- Regular hours query

-- PART D
SELECT E.SOCIAL_SECURITY_NUMBER AS [EMPLOYEE NUMBER], JC.JOB_CODE AS [SKILL CODE],
JC.BASIC_HOURLY_RATE AS RATE, JC.FRINGE_BENEFITS AS FRINGE,
(JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS) AS TOTAL,
SUM(ET.REGULAR_HOURS) AS HOURS,
((JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS)* ET.REGULAR_HOURS) AS GROSS,PROJECT_NUMBER
FROM
EMPLOYEE E, JOB_CLASSIFICATION JC, EMPLOYEE_TIME_CARD ET, PROJECT P
WHERE E.EMP_ID = ET.EMP_ID
AND ET.JOB_ID = JC.JOB_ID
AND JC.PROJECT_ID = P.PROJECT_ID
AND REGULAR_HOURS != 0
AND DATE BETWEEN '05-10-1995' AND '05-16-1995'
GROUP BY
E.SOCIAL_SECURITY_NUMBER , JC.JOB_CODE ,
JC.BASIC_HOURLY_RATE, JC.FRINGE_BENEFITS ,
(JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS), PROJECT_NUMBER,
((JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS)* ET.REGULAR_HOURS)

Part E- Overtime hours query
-- PART E
SELECT E.SOCIAL_SECURITY_NUMBER AS [EMPLOYEE NUMBER],JC.JOB_CODE AS [SKILL CODE],
JC.OVERTIME_RATE AS RATE, JC.FRINGE_BENEFITS AS FRINGE,
(JC.OVERTIME_RATE + JC.FRINGE_BENEFITS) AS TOTAL,
SUM(ET.OVERTIME_HOURS) AS HOURS,
((JC.OVERTIME_RATE + JC.FRINGE_BENEFITS)* ET.OVERTIME_HOURS) AS GROSS, PROJECT_NUMBER
FROM
EMPLOYEE E, JOB_CLASSIFICATION JC, EMPLOYEE_TIME_CARD ET, PROJECT P
WHERE E.EMP_ID = ET.EMP_ID
AND ET.JOB_ID = JC.JOB_ID
AND JC.PROJECT_ID = P.PROJECT_ID
AND OVERTIME_HOURS != 0
AND DATE BETWEEN '05-10-1995' AND '05-16-1995'
GROUP BY
E.SOCIAL_SECURITY_NUMBER,JC.JOB_CODE ,
JC.OVERTIME_RATE,JC.FRINGE_BENEFITS ,
(JC.OVERTIME_RATE + JC.FRINGE_BENEFITS),
((JC.OVERTIME_RATE + JC.FRINGE_BENEFITS)* ET.OVERTIME_HOURS) ,
PROJECT_NUMBER

Part F- Total hours worked per skill classification.
--PART F
SELECT JOB_CODE, SUM(REGULAR_HOURS) REGULAR_HOURS,
SUM(OVERTIME_HOURS) OVERTIME_HOURS,
SUM(REGULAR_HOURS+OVERTIME_HOURS) TOTAL_HOURS
FROM
JOB_CLASSIFICATION JC, EMPLOYEE_TIME_CARD ET, PROJECT P
WHERE
ET.JOB_ID = JC.JOB_ID
AND JC.PROJECT_ID = P.PROJECT_ID
AND P.PROJECT_NUMBER = 'OH-PIK-335-005'
GROUP BY JOB_CODE

Exhibit F
Exhibit F calculates the payroll of each employee. In this section we are calculating regular pay, overtime
pay paid to each employee for a given week and the gross amount.
1. Regular Pay query:
SELECT PROJECT_NUMBER AS JOB, JC.JOB_CODE AS [SKILL CODE],
JC.BASIC_HOURLY_RATE AS RATE, JC.FRINGE_BENEFITS AS FRINGE,
(JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS) AS TOTAL,
SUM(ET.REGULAR_HOURS) AS HOURS,
((JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS)* ET.REGULAR_HOURS) AS GROSS
FROM
EMPLOYEE E, JOB_CLASSIFICATION JC, EMPLOYEE_TIME_CARD ET, PROJECT P
WHERE E.EMP_ID = ET.EMP_ID
AND ET.JOB_ID = JC.JOB_ID
AND JC.PROJECT_ID = P.PROJECT_ID
AND REGULAR_HOURS != 0
AND DATE BETWEEN '05-10-1995' AND '05-16-1995'
AND SOCIAL_SECURITY_NUMBER = '391 05 7489'
GROUP BY
E.SOCIAL_SECURITY_NUMBER , JC.JOB_CODE ,
JC.BASIC_HOURLY_RATE, JC.FRINGE_BENEFITS ,
(JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS), PROJECT_NUMBER,
((JC.BASIC_HOURLY_RATE + JC.FRINGE_BENEFITS)* ET.REGULAR_HOURS)

2. Overtime Pay query:
SELECT PROJECT_NUMBER as JOB,JC.JOB_CODE AS [SKILL CODE],
JC.OVERTIME_RATE AS RATE, JC.FRINGE_BENEFITS AS FRINGE,
(JC.OVERTIME_RATE + JC.FRINGE_BENEFITS) AS TOTAL,
SUM(ET.OVERTIME_HOURS) AS HOURS,
((JC.OVERTIME_RATE + JC.FRINGE_BENEFITS)* ET.OVERTIME_HOURS) AS GROSS
FROM
EMPLOYEE E, JOB_CLASSIFICATION JC, EMPLOYEE_TIME_CARD ET, PROJECT P
WHERE E.EMP_ID = ET.EMP_ID
AND ET.JOB_ID = JC.JOB_ID
AND JC.PROJECT_ID = P.PROJECT_ID
AND OVERTIME_HOURS != 0
AND DATE BETWEEN '05-10-1995' AND '05-16-1995'
AND SOCIAL_SECURITY_NUMBER = '391 05 7489'
GROUP BY Database Design Model E.SOCIAL_SECURITY_NUMBER,JC.JOB_CODE ,
JC.OVERTIME_RATE,JC.FRINGE_BENEFITS ,
(JC.OVERTIME_RATE + JC.FRINGE_BENEFITS),
((JC.OVERTIME_RATE + JC.FRINGE_BENEFITS)* ET.OVERTIME_HOURS) ,
PROJECT_NUMBER
